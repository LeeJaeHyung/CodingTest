/*
문제
한수는 지금 (x, y)에 있다. 직사각형은 각 변이 좌표축에 평행하고, 왼쪽 아래 꼭짓점은 (0, 0), 오른쪽 위 꼭짓점은 (w, h)에 있다. 직사각형의 경계선까지 가는 거리의 최솟값을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 x, y, w, h가 주어진다.

출력
첫째 줄에 문제의 정답을 출력한다.
*/

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		StringBuilder sb = new StringBuilder();
		int x = Integer.parseInt(st.nextToken());
		int y = Integer.parseInt(st.nextToken());
		int w = Integer.parseInt(st.nextToken());
		int h = Integer.parseInt(st.nextToken());
		
		int[] arr = new int[4];
		
		arr[0] = x;
		arr[1] = y;
		arr[2] = w-x;
		arr[3] = h-y;
		
		int shortN = 1000;
		
		for(int i = 0; i<4; i++) {
			if(arr[i]<shortN) {
				shortN = arr[i];
			}
		}
		
		sb.append(shortN);
		System.out.println(sb);
	}
}

// 위와 같이 풀었습니다. 처음에 격은 문제는 x축이 증가하는 방향으로 이동하는 경우와 y축이 증가하는 방향으로 이동하는 경우만 구하였습니다.
// 문제점은 x,y축이 각각 감소하는 방향으로 이동하는 방향으로 이동하는 경우를 고려하지 안은 점이였습니다.
/*
다른 분들이 풀은 방식을 살펴본 결과  Math.min() 메소드를 이용하여 푸셨다는점입니다.
따라서 아래와 같은 코드로 수정될 수 있습니다.

public static void main (String[] args){
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  StringTokenizer st = new StringTokenizer(br.readLine());
  int x = Integer.parseInt(st.nextToken());
	int y = Integer.parseInt(st.nextToken());
	int w = Integer.parseInt(st.nextToken());
	int h = Integer.parseInt(st.nextToken());
	
  int min1 = Math.min(x,y);
  int min2 = Math.min(w-x, h-y);
  
  System.println(Math.min(min1, min2));
}

*/
