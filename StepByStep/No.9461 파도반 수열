/*
    파도반 수열 성공다국어

    시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
    1 초	128 MB	63633	27551	22536	41.887%
    문제
    오른쪽 그림과 같이 삼각형이 나선 모양으로 놓여져 있다. 첫 삼각형은 정삼각형으로 변의 길이는 1이다. 그 다음에는 다음과 같은 과정으로 정삼각형을 계속 추가한다. 나선에서 가장 긴 변의 길이를 k라 했을 때, 그 변에 길이가 k인 정삼각형을 추가한다.

    파도반 수열 P(N)은 나선에 있는 정삼각형의 변의 길이이다. P(1)부터 P(10)까지 첫 10개 숫자는 1, 1, 1, 2, 2, 3, 4, 5, 7, 9이다.

    N이 주어졌을 때, P(N)을 구하는 프로그램을 작성하시오.

    입력
    첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, N이 주어진다. (1 ≤ N ≤ 100)

    출력
    각 테스트 케이스마다 P(N)을 출력한다.
*/
/*
    풀이 : 직접 노트에 해당 문제에서 생성되는 정삼각형들을 직접 그려본결과  n번째 삼각형은 n-1번째 삼각형의 변의길이와 n-5번째 삼각형의 길이의 합으로 이루어진 다는것을 
          알수있었습니다.
          따라서 정답들을 담을 배열을 선언하고 해당배열의 길이를 101로 설정하여 해당 배열의 5번까지는 값을 채워놓고 나머지 값들을채워 넣는 padoban()함수를 호출하여
          미리 100번째 삼각형까지의 변의 길이를 채워둔후에 입력을 받는대로 해당인덱스에 접근하여 StringBuilder에 값을 쌓아 마지막에 출력하였습니다.
          
*/
import java.io.BufferedReader;
import java.io.InputStreamReader;

class Main {
	
	static long[] answer = new long[101];
	
	public static void main(String[] args) throws Exception {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		int T = Integer.parseInt(br.readLine());
		answer[1] = answer[2] = answer[3] = 1;
		answer[4] = answer[5] = 2;
		padoban();
		for(int i = 0; i<T; i++) {
			sb.append(answer[Integer.parseInt(br.readLine())]).append("\n");
		}
		System.out.println(sb.toString());
		
	}
	public static void padoban() {
		//Bottom Up
		for(int idx = 6; idx<101; idx++) {
			answer[idx] = answer[idx-2] + answer[idx-3]; 
		}
	
	}
	
}
