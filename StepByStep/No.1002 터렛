/*
문제
조규현과 백승환은 터렛에 근무하는 직원이다. 하지만 워낙 존재감이 없어서 인구수는 차지하지 않는다. 다음은 조규현과 백승환의 사진이다.



이석원은 조규현과 백승환에게 상대편 마린(류재명)의 위치를 계산하라는 명령을 내렸다. 조규현과 백승환은 각각 자신의 터렛 위치에서 현재 적까지의 거리를 계산했다.

조규현의 좌표 (x1, y1)와 백승환의 좌표 (x2, y2)가 주어지고, 조규현이 계산한 류재명과의 거리 r1과 백승환이 계산한 류재명과의 거리 r2가 주어졌을 때, 류재명이 있을 수 있는 좌표의 수를 출력하는 프로그램을 작성하시오.

입력
첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 다음과 같이 이루어져 있다.

한 줄에 x1, y1, r1, x2, y2, r2가 주어진다. x1, y1, x2, y2는 -10,000보다 크거나 같고, 10,000보다 작거나 같은 정수이고, r1, r2는 10,000보다 작거나 같은 자연수이다.

출력
각 테스트 케이스마다 류재명이 있을 수 있는 위치의 수를 출력한다. 만약 류재명이 있을 수 있는 위치의 개수가 무한대일 경우에는 -1을 출력한다.
*/

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		int t = Integer.parseInt(br.readLine());
		for(int i = 0; i<t; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			//분면을 구변하지 않고 계산하기위해 최소값을 0.0으로 옮겨 계산 하기위해서 +10000
			int x1 = Integer.parseInt(st.nextToken())+10000;
			int y1 = Integer.parseInt(st.nextToken())+10000;
			int r1 = Integer.parseInt(st.nextToken());
			int x2 = Integer.parseInt(st.nextToken())+10000;
			int y2 = Integer.parseInt(st.nextToken())+10000;
			int r2 = Integer.parseInt(st.nextToken());
			
			double distance;
			int xD;
			int yD;
			if(x1==x2&&y1==y2) {
				if(r1==r2) {
					sb.append("-1\n");
					continue;
				}else {
					sb.append("0\n");
					continue;
				}
			}else if(x1!=x2&&y1!=y2) {
				xD = Math.abs(x1-x2);
				yD = Math.abs(y1-y2);
				distance = Math.sqrt(xD*xD+yD*yD);
			}else {
				if(x1-x2==0) {
					distance = Math.abs(y1-y2);
				}else {
					distance = Math.abs(x1-x2);
				}
			}
			if(r1+r2==distance||Math.abs(r1-r2)==distance) {
				sb.append("1\n");
			}else if(Math.abs(r1-r2)<distance&&distance<r1+r2) {
				sb.append("2\n");
			}else {
				sb.append("0\n");
			}
		}
		System.out.println(sb);
	}
}

/*
풀이 방법 

터렛1의 좌표(x1,y1)
터렛2의 좌표(x2,y2)

터렛1과 타겟의 거리 r1
터렛2와 타겟의 거리 r2

1. t1 과  t2사이의 직선거리 d를 구한다 
2. d 보다  r1 r2 의 합이 작은경우 0
3. d 와 r1 r2 의 합이 같은경우 1
4. d보다  r1 r2 의 합이 큰경우 2 
5. d보다  r1 r2 의 합이 크나 경로상 겹치는 부분이 없는경우 !!  해당식을 도출해내는 공식이 필요함 0
6. d가 0 이며 r1 r2 가 다른경우 0

위의 경우로 따져볼수 있다

삼각형이 성립하는 경우
|a-b|<c<a+b

여기에서 문제점이 생긴게 삼각형이 성립하지 않아도 만나는 경우가 두가지 경우인데
r1+r2==d 인경우 두 터렛사이의 거리와 터렛과 목표 사이의 거리의 합이 같은경우
|r1-r2|==d 인경우 하나의 범위 끝에 만나는 경우 이경우를 생각하지 못해 푸는데 시간이 걸렸습니다.


d를 구할때 분면을 나누지 않고 구하는 최소값인 -1000인지점을 0.0으로 옮겨버린다

*/
